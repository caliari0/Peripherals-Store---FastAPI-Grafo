[project]
name = "python"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.12",
    "instructor>=1.8.3",
    "mock>=5.2.0",
    "pytz>=2025.2",
    "sqlmodel>=0.0.24",
    "uvicorn>=0.35.0",
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "jinja2>=3.1.6",
    "pyaml>=25.7.0",
    "pytest-asyncio>=1.0.0",
    "grafo>=0.2.17",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
# Enable auto-fix on save
fix = true
unsafe-fixes = false

# Enable specific rules for unused imports
select = ["F401"]  # F401: imported but unused
ignore = []

# Auto-fix unused imports
fixable = ["F401"]

# Line length
line-length = 88

# Target Python version
target-version = "py313"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Use spaces around operators
indent-style = "space"

# Use 4 spaces for indentation
indent-width = 4
